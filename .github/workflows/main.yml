on: [push]

env:
  REGISTRY_DOMAIN: ${{ secrets.REGISTRY_DOMAIN }}
  SERVICE_DOMAIN: localhost

jobs:
  build:
    name: Build/test and push
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@master
      - name: Set inotify
        run: |
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Login DockerHub
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin $REGISTRY_DOMAIN
      - name: Build api dev image
        run: |
          cd api
          docker build . --target dev-stage -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-dev
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-dev
      - name: Build frontend nuxt dev image
        run: |
          cd frontend-nuxt
          docker build . --target build-stage --build-arg BASE_URL=/frontend-nuxt/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-nuxt-dev
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-nuxt-dev
      - name: Build frontend vue dev image
        run: |
          cd frontend-vue
          docker build . --target build-stage --build-arg NODE_ENV=development --build-arg BASE_URL=/frontend-vue/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-vue-dev
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-vue-dev
      - name: Build backend dev image
        run: |
          cd backend
          docker build . --target build-stage --build-arg NODE_ENV=development --build-arg BASE_URL=/backend/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-dev
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-dev
      - name: Lint Dockerfile for api
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: api/Dockerfile
      - name: Lint Dockerfile for frontend-nuxt
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: frontend-nuxt/Dockerfile
      - name: Lint Dockerfile for vue
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: frontend-vue/Dockerfile
      - name: Run docker compose for dev
        run: |
          docker-compose -f docker-compose.actions.yml pull
          docker-compose -f docker-compose.actions.yml up -d
      - name: Lint API
        run: |
          docker exec api npm run lint
      - name: Test API
        run: |
          docker exec api npm run test
      - name: Lint backend
        run: |
          docker exec backend npm run lint
      - name: Unit test backend
        run: |
          docker exec backend npm run test:unit
      - name: E2E test backend
        run: |
          docker exec backend npm run test:e2e -- --headless
      - name: Lint frontend vue
        run: |
          docker exec frontend-vue npm run lint
      - name: Unit test frontend vue
        run: |
          docker exec frontend-vue npm run test:unit
      - name: E2E test frontend vue
        run: |
          docker exec frontend-vue npm run test:e2e -- --headless
      - name: Unit test frontend nuxt
        run: |
          docker exec frontend-nuxt npm run test
      - name: Build api latest image
        if: github.ref == 'refs/heads/master'
        run: |
          cd api
          docker build . --target production-stage --build-arg NODE_ENV=production -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-latest
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-latest
      - name: Build frontend vue latest image
        if: github.ref == 'refs/heads/master'
        run: |
          cd frontend-vue
          docker build . --target production-stage --build-arg NODE_ENV=production --build-arg BASE_URL=/frontend-vue/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-vue-latest
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-vue-latest
      - name: Build frontend nuxt latest image
        if: github.ref == 'refs/heads/master'
        run: |
          cd frontend-nuxt
          docker build . --target production-stage --build-arg BASE_URL=/frontend-nuxt/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-nuxt-latest
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-nuxt-latest
      - name: Build backend latest image
        if: github.ref == 'refs/heads/master'
        run: |
          cd backend
          docker build . --target production-stage --build-arg NODE_ENV=production --build-arg BASE_URL=/backend/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-latest
          docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-latest
