worker_processes auto;

events { worker_connections 4096; }

http {
    gzip                        on;
    sendfile                    on;
    fastcgi_read_timeout        120s;
    include                     mime.types;
    fastcgi_buffer_size         16k;
    fastcgi_buffers             256 16k;
    fastcgi_busy_buffers_size   4064k;
    fastcgi_max_temp_file_size  0;

    client_max_body_size 1024M;

    resolver 127.0.0.11 ipv6=off;
    access_log  /dev/stdout;
    error_log   /dev/stderr;

    server {
        listen       80;
        listen       443 ssl;
        listen       [::]:443 ssl;

        ssl_certificate     /ssl/nginx-selfsigned.crt;
        ssl_certificate_key /ssl/nginx-selfsigned.key;


        location / {
            return 301 /frontend-nuxt/;
        }

        location /frontend-nuxt {
            return 301 /frontend-nuxt/;
        }

        location ~* ^/frontend-nuxt/(.*) {
            set $frontendNuxtHost "frontend-nuxt";
            set $frontendNuxtPort "3000";
            rewrite /frontend-nuxt/(.*) /frontend-nuxt/$1 break;

            proxy_pass http://$frontendNuxtHost:$frontendNuxtPort/frontend-nuxt/$1$is_args$args;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /frontend-vue {
            return 301 /frontend-vue/;
        }

        location ~* ^/frontend-vue/(.*) {
            set $frontendVueHost "frontend-vue";
            set $frontendVuePort "80";
            rewrite /frontend-vue/(.*) /frontend-vue/$1 break;

            proxy_pass http://$frontendVueHost:$frontendVuePort/frontend-vue/$1$is_args$args;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /backend {
            return 301 /backend/;
        }

        location ~* ^/backend/(.*) {
            set $backendHost "backend";
            set $backendPort "80";
            rewrite /backend/(.*) /backend/$1 break;

            proxy_pass http://$backendHost:$backendPort/backend/$1$is_args$args;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /api {
            return 301 /api/;
        }

        location ~* ^/api/(.*) {
            set $apiHost "api";
            set $apiPort "3000";
            rewrite /api/(.*) /api/$1 break;

            proxy_pass http://$apiHost:$apiPort/$1$is_args$args;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /mailhog {
            return 301 /mailhog/;
        }

        location ~* ^/mailhog/(.*) {
            set $mailhogHost "mailhog";
            set $mailhogPort "8025";
            rewrite /mailhog/(.*) /mailhog/$1 break;

            proxy_pass http://$mailhogHost:$mailhogPort/$1$is_args$args;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
}
