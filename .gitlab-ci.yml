stages:
  - build dev environment
  - testing
  - build production

cache:
  key: "$CI_PIPELINE_ID"
  paths:
    - /root/.npm
    - node_modules


.before_script_template: &before-script
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin $REGISTRY_DOMAIN

build-nginx:
  stage: build dev environment
  image: docker:stable
  <<: *before-script
  script:
    - cd nginx 
    - docker build --no-cache . -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:nginx-dev
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:nginx-dev

build-api:
  stage: build dev environment
  image: docker:stable
  <<: *before-script
  script:
    - cd api 
    - docker build --no-cache . --target dev-stage -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-dev
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-dev

build-frontend:
  stage: build dev environment
  image: docker:stable
  <<: *before-script
  variables:
    NODE_ENV: development
    BASE_URL: /frontend/
  script:
    - cd frontend
    - docker build --no-cache . --target build-stage --build-arg NODE_ENV=$NODE_ENV --build-arg BASE_URL=/frontend/  -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-dev
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-dev

build-backend:
  stage: build dev environment
  image: docker:stable
  <<: *before-script
  variables:
    NODE_ENV: development
    BASE_URL: /backend/
  script:
    - cd backend
    - docker build --no-cache . --target build-stage --build-arg NODE_ENV=$NODE_ENV --build-arg BASE_URL=/backend/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-dev
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-dev

build-mysql:
  stage: build dev environment
  image: docker:stable
  <<: *before-script
  script:
    - cd mysql
    - docker build . -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:mysql-dev
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:mysql-dev

lint-test:
  stage: testing
  image: docker/compose:latest
  <<: *before-script
  services:
    - docker:dind   
  variables:
    SERVICE_DOMAIN: localhost 
  script:
    - docker-compose -f docker-compose.actions.yml pull
    - docker-compose -f docker-compose.actions.yml down -t1 -v
    - docker-compose -f docker-compose.actions.yml up -d
    - docker exec api npm run lint
    - docker exec api npm run test
    - docker exec backend npm run lint
    - docker exec backend npm run test:unit
    - docker exec frontend npm run lint
    - docker exec frontend npm run test:unit

production-api:
  stage: build production
  image: docker:stable
  <<: *before-script
  script:
    - cd api 
    - docker build --no-cache . --target production-stage -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-latest
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:api-latest

production-backend:
  stage: build production
  image: docker:stable
  <<: *before-script
  variables:
    NODE_ENV: production
    BASE_URL: /backend/
  script:
    - cd backend
    - docker build --no-cache . --target production-stage --build-arg NODE_ENV=$NODE_ENV --build-arg BASE_URL=/backend/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-latest
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:backend-latest

production-frontend:
  stage: build production
  image: docker:stable
  <<: *before-script
  variables:
    NODE_ENV: production
    BASE_URL: /frontend/
  script:
    - cd frontend
    - docker build --no-cache . --target production-stage --build-arg NODE_ENV=$NODE_ENV --build-arg BASE_URL=/frontend/ -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-latest
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:frontend-latest

production-mysql:
  stage: build production
  image: docker:stable
  <<: *before-script
  script:
    - cd mysql
    - docker build . -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:mysql-latest
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:mysql-latest


production-nginx:
  stage: build production
  image: docker:stable
  <<: *before-script
  script:
    - cd nginx
    - docker build . -t $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:nginx-latest
    - docker push $REGISTRY_DOMAIN/chrisleekr/nodejs-vuejs-mysql-boilerplate:nginx-latest