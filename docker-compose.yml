version: "3.7"

services:
  nginx:
    container_name: nginx
    depends_on:
      - api
      - frontend
      - mysql
    build:
      context: ./nginx
    networks:
      - internal
    volumes:
      - ./nginx/image-files/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx:/etc/nginx/html
    ports:
      - 80:80
      - 443:443

  api:
    container_name: api
    build:
      context: ./api
      target: dev-stage
      #target: production-stage
    depends_on:
      - mysql
    networks:
      - internal
    ports:
      - 3000:3000
    # volumes:
    #   - ./api:/srv
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=boilerplate
      - DB_CONNECTION_LIMIT=10
      - DB_DEBUG=true
      - JWT_SECRET_KEY=aaGhu2foo7sheithePhai4Aef
      - JWT_EXPIRES_IN=1w
      - BCRYPT_SALTING_ROUND=10
      - API_BASE_URL=http://localhost/api
      - FRONTEND_URL=http://localhost/frontend
      - EMAIL_FROM_ADDRESS=support@boilerplate.local
      - EMAIL_FROM_NAME=Support
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_AUTH_USER=
      - SMTP_AUTH_PASS=
      - SMTP_DEBUG=true
      - SMTP_LOGGER=true


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: production-stage
      args:
        NODE_ENV: production
        BASE_URL: /frontend/
    depends_on:
      - mysql
    networks:
      - internal

  mysql:
    container_name: mysql
    image: mysql:8
    networks:
      - internal
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/sql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    ports:
      - 3307:3306
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: boilerplate 

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    networks:
      - internal
    ports: 
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

networks:
  internal:
    driver: bridge

volumes:
  mysql_data:
